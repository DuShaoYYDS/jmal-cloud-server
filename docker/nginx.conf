# nginx : /usr/local/Cellar/nginx/nginx-1.17.8/objs/nginx
# nginx.conf : /usr/local/nginx/conf/nginx.conf
#user  nobody;
worker_processes 2;

events {
    worker_connections  1024;
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
	    #设定mime类型,类型由mime.type文件定义
    	include       mime.types;
	    #设置文件使用的默认的MIME-type
    	default_type  application/octet-stream;
	    #sendfile指令指定 nginx 是否调用sendfile 函数（zero copy 方式）来输出文件，对于普通应用，必须设为on。如果用来进行下载等应用磁盘IO重负载应用，可设置为off，以平衡磁盘与网络IO处理速度，降低系统uptime
    	sendfile on;
    	tcp_nopush on;
	    #keepalive超时时间。
    	keepalive_timeout 65;
    	#gzip on;

        server {
        	listen 8080;
        	server_name localhost;

                location = / {
                        proxy_pass   http://localhost:8088/articles;
                        proxy_set_header Host $proxy_host;
                        proxy_set_header X-real-ip $remote_addr;
                }

                location /api {
                                proxy_pass   http://localhost:8088;
                                proxy_set_header Host $proxy_host;
                                proxy_set_header X-real-ip $remote_addr;
                        }

                location /articles/articles {
                        proxy_pass   http://localhost:8088/articles;
                        proxy_set_header Host $proxy_host;
                        proxy_set_header X-real-ip $remote_addr;
                }

        	    location /articles {
                        proxy_pass   http://localhost:8088/articles;
                        proxy_set_header Host $proxy_host;
                        proxy_set_header X-real-ip $remote_addr;
                }

                location / {
                        proxy_pass   http://localhost:8088/articles/;
                        proxy_set_header Host $proxy_host;
                        proxy_set_header X-real-ip $remote_addr;
                }

        }

    ###jmal-cloud-vie vue.js 前端配置
    server {
            listen 80;
            server_name  localhost;

            ## 这里就是前端构建后生成的dist目录
            root /jmal-cloud-view/dist;

	        client_max_body_size 50m;
            client_body_buffer_size 512k;

            location /api/ {
                    proxy_pass   http://localhost:8088/;
                    proxy_set_header Host $proxy_host;
                    #下边是为获取真实IP所做的设置
                    proxy_set_header X-real-ip $remote_addr;
                    proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;
                    proxy_set_header    HTTP_X_FORWARDED_FOR $remote_addr;
                    proxy_set_header    X-Forwarded-Proto $scheme;
                    proxy_redirect      http://localhost:8088/file/  http://localhost:7070/api/file/;
            }

            location / {
                try_files $uri $uri/ /index.html;
                        index index.html index.htm;
            }

            location /mq/ {
                    proxy_pass   http://localhost:8088/mq/;
                    #websocket额外配置开始
                          proxy_http_version 1.1;
                          proxy_set_header Upgrade $http_upgrade;
                          proxy_set_header Connection "upgrade";
                          proxy_connect_timeout 60s;#l连接超时时间，不能设置太长会浪费连接资源
                      proxy_read_timeout 500s;#读超时时间
                      proxy_send_timeout 500s;#写超时时间
                    #websocket额外配置结束
            }

            location ~ \.(eot|otf|ttf|woff|woff2|svg)$ {
                    add_header  Access-Control-Allow-Origin *;
            }
    }

    include servers/*;
}
