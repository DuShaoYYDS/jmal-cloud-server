name: Build and Push Docker Image to Tencent

on:
  workflow_dispatch:
  release:
    types: [ published ]
    tags: [ v* ]

jobs:
  build_docker_image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Extract project version from pom.xml
        run: |
          VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV        

      - name: Build Docker image
        run: |
          docker login --username=${{ secrets.TENCENT_DOCKER_USERNAME }} ccr.ccs.tencentyun.com --password=${{ secrets.TENCENT_DOCKER_PASSWORD }}
          docker build -t jmalcloud:${{ env.PROJECT_VERSION }} --build-arg VERSION=${{ env.PROJECT_VERSION }} . --load

      - name: Push Docker image
        run: |
          docker login --username=${{ secrets.TENCENT_DOCKER_USERNAME }} ccr.ccs.tencentyun.com --password=${{ secrets.TENCENT_DOCKER_PASSWORD }}
          docker tag jmalcloud:${{ env.PROJECT_VERSION }} ccr.ccs.tencentyun.com/jmal/jmalcloud:${{ env.PROJECT_VERSION }}
          docker tag jmalcloud:${{ env.PROJECT_VERSION }} ccr.ccs.tencentyun.com/jmal/jmalcloud:latest
          docker push ccr.ccs.tencentyun.com/jmal/jmalcloud:${{ env.PROJECT_VERSION }}
          docker push ccr.ccs.tencentyun.com/jmal/jmalcloud:latest
