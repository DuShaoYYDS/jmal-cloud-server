name: Create Release with Jar

on:
  workflow_dispatch:
#  release:
#    types: [published]
#    tags: [v*]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Extract project version from pom.xml
        run: |
          VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Generate Release Notes
        id: generate_release_notes
        run: |
          git fetch --prune --unshallow
          LATEST_TAG=$(git describe --tags --abbrev=0)
          COMMIT_MSGS=$(git log $LATEST_TAG..HEAD --grep 'fix:' --grep 'perf:' --grep 'feat:' --pretty=format:"%h - %s%n")
          echo "RELEASE_NOTES=$COMMIT_MSGS" >> $GITHUB_ENV

      - name: Create Git tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag -a v${{ env.PROJECT_VERSION }} -m "Release ${{ env.PROJECT_VERSION }}"
          git push origin v${{ env.PROJECT_VERSION }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PROJECT_VERSION }}
          release_name: Release ${{ env.PROJECT_VERSION }}
          body: |
            Changes in this release:
            ${{ env.RELEASE_NOTES }}
          draft: false
          prerelease: false

      - name: Upload Jar to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/clouddisk-${{ env.PROJECT_VERSION }}-exec.jar
          asset_name: clouddisk-${{ env.PROJECT_VERSION }}-exec.jar
          asset_content_type: application/java-archive
